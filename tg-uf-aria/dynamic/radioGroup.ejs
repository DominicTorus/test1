'use client'
import React, { useState } from 'react'
import TorusRadio from '@/app/torusComponents/torusRadio'


const RadioGroup<%=data.label %> = ({setUser}:any) => {
  
  const handleChange=(value:any)=>{
    setUser((prev:any)=>({...prev,<%=data.label %>:value}))
    }
  <%_ for(let i=0;i<data.props.length;i++){ _%>
  <%_ if(data.props[i].name === "defaultValue"){ _%>
  const [selected, setSelected] = useState("<%= data.props[i].value %>");
  <%_ }_%>
  <%_ } _%>

return (
  <%_ let height = (relation.height/data2.height)*100  _%>  
  <%_ let width = (relation.width/data2.width)*100  _%>
  <%_ let left = (relation.position.x/data2.width)*100  _%>
  <%_ let top =(relation.position.y/data2.height)*100  _%>
  <%_ let mdHeight = height - (height*0.1)  _%>  
  <%_ let mdWidth = width - (width*0.1)  _%>
  <%_ let mdLeft = left - (left*0.1)  _%>
  <%_ let mdTop = top - (top*0.1)  _%>
  <%_ let smHeight = mdHeight - (mdHeight*0.1)  _%>  
  <%_ let smWidth = mdWidth - (mdWidth*0.1)  _%>
  <%_ let smLeft = mdLeft - (mdLeft*0.1)  _%>
  <%_ let smTop = mdTop - (mdTop*0.1)  _%>
  <%_ let xlHeight = height + (height*0.1)  _%>  
  <%_ let xlWidth = width + (width*0.1)  _%>
  <%_ let xlLeft = left + (left*0.1)  _%>
  <%_ let xlTop = top + (top*0.1)  _%>
  <div className='container'>
    <div className=' absolute left-[<%= left %>%] top-[<%= top %>%] h-[<%= height %>%] w-[<%= width %>%]   
      sm:left-[<%= smLeft %>%] sm:top-[<%= smTop %>%] sm:h-[<%= smHeight %>%] sm:w-[<%= smWidth %>%] 
      md:left-[<%= mdLeft %>%] md:top-[<%= mdTop %>%] md:h-[<%= mdHeight %>%] md:w-[<%= mdWidth %>%]  
      xl:left-[<%= xlLeft %>%] xl:top-[<%= xlTop %>%] xl:h-[<%= xlHeight %>%] xl:w-[<%= xlWidth %>%] '>
    <TorusRadio
    <%_ for(let i=0;i<data.props.length;i++) { _%>
      <%_ if(data.props[i].name === "label" && data.props[i].value !== ""){ _%>
        label="<%= data.props[i].value %>"
        <%_ } _%>
    <%_ } _%>
    
    onChange={handleChange}
    content={[<%_let content= [] _%><%_ for(let i=0;i<data.Radios.length;i++){ _%><%_ for(let j=0;j<data.Radios[i].props.length;j++){ _%><%_ if(data.Radios[i].props[j].name === "value" && data.Radios[i].props[j].value !== ""){ _%><%_ content.push(data.Radios[i].props[j].value)_%><%_ } _%><%_ } _%><%_ } _%><%_for(let k=0;k<content.length;k++){ _%>'<%=content[k]%>'<%= content.length-1===k?'':',' %> <%_ }_%>]}
    />
   </div>
    </div>
  )
}
export default RadioGroup<%=data.label %>



