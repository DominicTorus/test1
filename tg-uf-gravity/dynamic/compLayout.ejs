<%_ let layoutGroupId = data _%>
<%_ let nodes = relation _%>
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import { ToastContainer } from 'react-toastify'
import 'react-toastify/dist/ReactToastify.css';
import LogoutPage from "../components/logout";
import { ThemeProvider } from "@gravity-ui/uikit";
import "@gravity-ui/uikit/styles/fonts.css";
import "@gravity-ui/uikit/styles/styles.css";
import { Grid } from "@gravity-ui/page-constructor";
import ThemeS from '../components/ThemeS'
import GroupNav from './GroupNav/GroupNav';
import { LanguageProvider } from '../components/languageContext';
<%_ for (let i = 0; i < layoutGroupId.length; i++) { _%>   
<%_ for(let j = 0;j < nodes.length;j++) { _%> 
<%_ if ( layoutGroupId[i] === nodes[j].id && nodes[j].type === 'group') { _%>
import Group<%= nodes[j].label  %>  from "./Group<%= nodes[j].label  %>/Group<%= nodes[j].label  %>";
<%_ } _%>
<%_ } _%>
<%_ } _%>

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Torus Components',
  description: '"Generated by Torus'
}

export default function RootLayout({
  children
}: {
  children: React.ReactNode
}) {
  return (
    <LanguageProvider>
      <div className=' relative h-[100vh] w-[100vw] '>
        <ThemeS>
          <GroupNav />
        <%_ for (let i = 0; i < layoutGroupId.length; i++) { _%>
          <Grid containerClass="grid grid-cols-12 gap-2 " >
          <%_ for(let j = 0;j < nodes.length;j++) { _%> 
            <%_ if ( layoutGroupId[i] === nodes[j].id && nodes[j].type === 'group') { _%>
          < Group<%= nodes[j].label  %> />
            <%_ } _%>
            <%_ } _%>
          </Grid>
            <%_ } _%>
          <ThemeProvider theme='light'>
              <main>{children}</main>
          </ThemeProvider>
        </ThemeS>
        <ToastContainer />
      </div>
    </LanguageProvider>
  )
}
